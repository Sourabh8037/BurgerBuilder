{"version":3,"sources":["Components/UI/Forms/Input/Input.js","Components/Order/Checkout/CheckoutSummary.js","Containers/Checkout/Contact/ContactData.js","Containers/Checkout/Checkout.js"],"names":["input","props","inputElement","inputClasses","valid","push","touched","elementType","onChange","changed","className","join","elementConfig","value","options","map","option","key","displayValue","label","checkoutSummary","style","margin","width","height","Burger","ingredients","onClick","checkoutSummaryCancelled","checkoutSummaryContinued","ContactData","state","orderForm","name","type","placeholder","validation","required","street","zipcode","minLength","maxLength","country","email","isEmail","deliveryMethod","formIsValid","orderHandler","event","preventDefault","setState","loading","formData","order","ings","price","totalPrice","orderData","userId","onOrderBurger","token","inputChangeHandler","inputIdentifier","updatedFormElement","updateObject","target","checkValidity","form","formElementArray","this","id","config","onSubmit","formElement","Input","disabled","Spinner","color","Component","connect","burgerBuilder","auth","dispatch","actions","axios","Checkout","history","goBack","replace","purchasedRedirect","purchased","to","Fragment","CheckoutSummary","path","match","url","component"],"mappings":"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","file":"static/js/5.c4068908.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst input = (props) => {\r\n  let inputElement = null;\r\n  const inputClasses = [\"form-control-lg form-control\"];\r\n  if (props.valid) {\r\n    inputClasses.push(\" is-valid\");\r\n  } else if (props.touched) {\r\n    inputClasses.push(\"is-invalid\");\r\n  }\r\n  switch (props.elementType) {\r\n    case \"input\":\r\n      inputElement = (\r\n        <input\r\n          onChange={props.changed}\r\n          className={inputClasses.join(\" \")}\r\n          {...props.elementConfig}\r\n          value={props.value}\r\n        />\r\n      );\r\n      break;\r\n    case \"select\":\r\n      inputElement = (\r\n        <select className={inputClasses.join(\" \")} value={props.value}>\r\n          {props.elementConfig.options.map((option) => (\r\n            <option key={option.value} value={option.value}>\r\n              {option.displayValue}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      );\r\n      break;\r\n    case \"textarea\":\r\n      inputElement = (\r\n        <textarea\r\n          className={inputClasses.join(\" \")}\r\n          {...props.elementConfig}\r\n          value={props.value}\r\n        />\r\n      );\r\n      break;\r\n    default:\r\n      inputElement = (\r\n        <input\r\n          onChange={props.changed}\r\n          className={inputClasses.join(\" \")}\r\n          {...props.elementConfig}\r\n          value={props.value}\r\n        />\r\n      );\r\n  }\r\n\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label className=\"lead\">{props.label}</label>\r\n      {inputElement}\r\n    </div>\r\n  );\r\n};\r\nexport default input;\r\n","import React from \"react\";\r\nimport Burger from \"../../Burger/Burger\";\r\nconst checkoutSummary = (props) => (\r\n  <div\r\n    className=\"d-flex flex-column justify-content-center align-items-center text-align-cetner\"\r\n    style={{ margin: \"8rem 0 2rem 0\" }}\r\n  >\r\n    <h1 className=\"text-center mx-3\">We hope it tastes well!</h1>\r\n    <div style={{ width: \"100%\", height: \"100%\", margin: \"auto\" }}>\r\n      <Burger ingredients={props.ingredients}></Burger>\r\n    </div>\r\n    <div className=\"d-flex w-100 align-items-center justify-content-center\">\r\n      <button\r\n        className=\"btn btn-outline-danger mx-2\"\r\n        onClick={props.checkoutSummaryCancelled}\r\n      >\r\n        CANCEL\r\n      </button>\r\n      <button\r\n        className=\"btn btn-outline-success mx-2\"\r\n        onClick={props.checkoutSummaryContinued}\r\n      >\r\n        CONTINUE\r\n      </button>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default checkoutSummary;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"../../../axios-orders\";\r\nimport { connect } from \"react-redux\";\r\nimport Spinner from \"../../../Components/UI/Spinner/Spinner\";\r\nimport Input from \"../../../Components/UI/Forms/Input/Input\";\r\nimport * as actions from \"../../../store/actions/index\";\r\nimport { updateObject, checkValidity } from \"../../../shared/utility\";\r\n\r\nclass ContactData extends Component {\r\n  //  STATE\r\n  state = {\r\n    orderForm: {\r\n      name: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"text\",\r\n          placeholder: \"Your Name\",\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          valid: false,\r\n        },\r\n        touched: false,\r\n      },\r\n      street: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"text\",\r\n          placeholder: \"Street Name\",\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          valid: false,\r\n        },\r\n        touched: false,\r\n      },\r\n      zipcode: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"text\",\r\n          placeholder: \"5 digit ZIP Code\",\r\n        },\r\n        touched: false,\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          valid: false,\r\n          minLength: 5,\r\n          maxLength: 5,\r\n        },\r\n      },\r\n      country: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"text\",\r\n          placeholder: \"Your Country\",\r\n        },\r\n        touched: false,\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          valid: false,\r\n        },\r\n      },\r\n      email: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"email\",\r\n          placeholder: \"Your E-mail\",\r\n        },\r\n        touched: false,\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          isEmail: true,\r\n        },\r\n      },\r\n      deliveryMethod: {\r\n        elementType: \"select\",\r\n        elementConfig: {\r\n          options: [\r\n            { value: \"fastest\", displayValue: \"Fastest\" },\r\n            { value: \"cheapest\", displayValue: \"Cheapest\" },\r\n          ],\r\n        },\r\n        value: \"fastest\",\r\n        valid: true,\r\n      },\r\n    },\r\n    formIsValid: false,\r\n  };\r\n\r\n  // METHODS\r\n  orderHandler = (event) => {\r\n    event.preventDefault();\r\n    this.setState({ loading: true });\r\n    const formData = {};\r\n    for (let key in this.state.orderForm) {\r\n      formData[key] = this.state.orderForm[key].value;\r\n    }\r\n    const order = {\r\n      ingredients: this.props.ings,\r\n      price: this.props.totalPrice,\r\n      orderData: formData,\r\n      userId: this.props.userId,\r\n    };\r\n    this.props.onOrderBurger(order, this.props.token);\r\n  };\r\n\r\n  // ADDING TWO WAY BINDING\r\n  inputChangeHandler = (event, inputIdentifier) => {\r\n    const updatedFormElement = updateObject(\r\n      this.state.orderForm[inputIdentifier],\r\n      {\r\n        value: event.target.value,\r\n        valid: checkValidity(\r\n          event.target.value,\r\n          this.state.orderForm[inputIdentifier].validation\r\n        ),\r\n        touched: true,\r\n      }\r\n    );\r\n    const form = updateObject(this.state.orderForm, {\r\n      [inputIdentifier]: updatedFormElement,\r\n    });\r\n    let formIsValid = true;\r\n    for (let key in form) {\r\n      formIsValid = form[key].valid && formIsValid;\r\n    }\r\n    form[inputIdentifier] = updatedFormElement;\r\n    this.setState({ orderForm: form, formIsValid: formIsValid });\r\n  };\r\n\r\n  // RENDER METHOD\r\n  render() {\r\n    const formElementArray = [];\r\n    for (let key in this.state.orderForm) {\r\n      formElementArray.push({\r\n        id: key,\r\n        config: this.state.orderForm[key],\r\n      });\r\n    }\r\n\r\n    let form = (\r\n      <form onSubmit={this.orderHandler}>\r\n        {formElementArray.map((formElement) => (\r\n          <Input\r\n            key={formElement.id}\r\n            elementType={formElement.config.elementType}\r\n            elementConfig={formElement.config.elementConfig}\r\n            value={formElement.value}\r\n            touched={formElement.config.touched}\r\n            valid={formElement.config.valid}\r\n            changed={(event) => this.inputChangeHandler(event, formElement.id)}\r\n          ></Input>\r\n        ))}\r\n\r\n        <div className=\"d-flex justify-content-center align-items-center\">\r\n          <button\r\n            className=\"btn btn-lg btn-success\"\r\n            onClick={this.orderHandler}\r\n            disabled={!this.state.formIsValid}\r\n          >\r\n            ORDER\r\n          </button>\r\n        </div>\r\n      </form>\r\n    );\r\n    if (this.props.loading) {\r\n      form = (\r\n        <div className=\"d-flex flex-column align-items-center\">\r\n          <Spinner></Spinner>\r\n          <h1 style={{ color: \"#0ff\" }}>Loading...</h1>\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div\r\n        className=\"container my-5 py-3 text-light bg-dark border text-center\"\r\n        style={{ width: \"70%\" }}\r\n      >\r\n        <h2>Enter Your Contact Data</h2>\r\n        {form}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    ings: state.burgerBuilder.ingredients,\r\n    totalPrice: state.burgerBuilder.totalPrice,\r\n    loading: state.order.loading,\r\n    token: state.auth.token,\r\n    userId: state.auth.userId,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onOrderBurger: (orderData, token) =>\r\n      dispatch(actions.purchaseBurger(orderData, token)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactData, axios);\r\n","import React, { Component } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport CheckoutSummary from \"../../Components/Order/Checkout/CheckoutSummary\";\r\nimport ContactData from \"./Contact/ContactData\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Checkout extends Component {\r\n  // METHODS\r\n\r\n  checkoutSummaryCancelled = () => {\r\n    this.props.history.goBack();\r\n  };\r\n  checkoutSummaryContinued = () => {\r\n    this.props.history.replace(\"/checkout/contact-data\");\r\n  };\r\n\r\n  // VARIABLES ON DEPENDENCIES\r\n\r\n  render() {\r\n    let summary = <Redirect to=\"/\" />;\r\n    if (this.props.ings) {\r\n      const purchasedRedirect = this.props.purchased ? (\r\n        <Redirect to=\"/\" />\r\n      ) : null;\r\n      summary = (\r\n        <React.Fragment>\r\n          {purchasedRedirect}\r\n          <CheckoutSummary\r\n            ingredients={this.props.ings}\r\n            checkoutSummaryCancelled={this.checkoutSummaryCancelled}\r\n            checkoutSummaryContinued={this.checkoutSummaryContinued}\r\n          ></CheckoutSummary>\r\n          <Route\r\n            path={this.props.match.url + \"/contact-data\"}\r\n            component={ContactData}\r\n          />\r\n        </React.Fragment>\r\n      );\r\n\r\n      return summary;\r\n    }\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    ings: state.burgerBuilder.ingredients,\r\n    purchased: state.order.purchased,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Checkout);\r\n"],"sourceRoot":""}